{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "TransferAdmin",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "transferAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "admin()": "f851a440",
    "transferAdmin(address)": "75829def"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"TransferAdmin\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"TransferAdmin(address,address)\":{\"params\":{\"newAdmin\":\"The address of the new admin.\",\"oldAdmin\":\"The address of the old admin.\"}}},\"kind\":\"dev\",\"methods\":{\"transferAdmin(address)\":{\"details\":\"Notes: - Does not revert if the admin is the same. - This function can potentially leave the contract without an admin, thereby removing any functionality that is only available to the admin. Requirements: - `msg.sender` must be the contract admin.\",\"params\":{\"newAdmin\":\"The address of the new admin.\"}}},\"title\":\"IAdminable\",\"version\":1},\"userdoc\":{\"events\":{\"TransferAdmin(address,address)\":{\"notice\":\"Emitted when the admin is transferred.\"}},\"kind\":\"user\",\"methods\":{\"admin()\":{\"notice\":\"The address of the admin account or contract.\"},\"transferAdmin(address)\":{\"notice\":\"Transfers the contract admin to a new address.\"}},\"notice\":\"Contract module that provides a basic access control mechanism, with an admin that can be granted exclusive access to specific functions. The inheriting contract must set the initial admin in the constructor.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v2-core/src/interfaces/IAdminable.sol\":\"IAdminable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/v2-core/lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/v2-core/lib/prb-math/\",\":@prb/test/=lib/v2-core/lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-deploy-proxy/=lib/forge-deploy/examples/basic/lib/forge-deploy-proxy/src/\",\":forge-deploy/=lib/forge-deploy/contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":prb-math/=lib/v2-core/lib/prb-math/src/\",\":prb-test/=lib/v2-core/lib/prb-test/src/\",\":solady/=lib/v2-core/lib/solady/\",\":solarray/=lib/v2-core/lib/solarray/src/\",\":uniswap-v2-core/=lib/uniswap-v2-core/contracts/\",\":uniswap-v2-periphery/=lib/uniswap-v2-periphery/contracts/\",\":v2-core/=lib/v2-core/\"]},\"sources\":{\"lib/v2-core/src/interfaces/IAdminable.sol\":{\"keccak256\":\"0xecc2d5f08b737e1acd5f641de59b262831c520adf8cd7290d02efe39e0ae443e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://13c159aa3a2db6e2be6f2483c7e001dc84360220bdaf9a38247c213529a2d885\",\"dweb:/ipfs/QmZTfUR2FTfnC3Rohe8ntEvDwyW3K3RfruHZ98Phi48BGH\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldAdmin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TransferAdmin",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAdmin"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "transferAdmin(address)": {
            "details": "Notes: - Does not revert if the admin is the same. - This function can potentially leave the contract without an admin, thereby removing any functionality that is only available to the admin. Requirements: - `msg.sender` must be the contract admin.",
            "params": {
              "newAdmin": "The address of the new admin."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "admin()": {
            "notice": "The address of the admin account or contract."
          },
          "transferAdmin(address)": {
            "notice": "Transfers the contract admin to a new address."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/v2-core/lib/openzeppelin-contracts/contracts/",
        "@prb/math/=lib/v2-core/lib/prb-math/",
        "@prb/test/=lib/v2-core/lib/prb-test/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-deploy-proxy/=lib/forge-deploy/examples/basic/lib/forge-deploy-proxy/src/",
        "forge-deploy/=lib/forge-deploy/contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "prb-math/=lib/v2-core/lib/prb-math/src/",
        "prb-test/=lib/v2-core/lib/prb-test/src/",
        "solady/=lib/v2-core/lib/solady/",
        "solarray/=lib/v2-core/lib/solarray/src/",
        "uniswap-v2-core/=lib/uniswap-v2-core/contracts/",
        "uniswap-v2-periphery/=lib/uniswap-v2-periphery/contracts/",
        "v2-core/=lib/v2-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/v2-core/src/interfaces/IAdminable.sol": "IAdminable"
      },
      "libraries": {}
    },
    "sources": {
      "lib/v2-core/src/interfaces/IAdminable.sol": {
        "keccak256": "0xecc2d5f08b737e1acd5f641de59b262831c520adf8cd7290d02efe39e0ae443e",
        "urls": [
          "bzz-raw://13c159aa3a2db6e2be6f2483c7e001dc84360220bdaf9a38247c213529a2d885",
          "dweb:/ipfs/QmZTfUR2FTfnC3Rohe8ntEvDwyW3K3RfruHZ98Phi48BGH"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/v2-core/src/interfaces/IAdminable.sol",
    "id": 60806,
    "exportedSymbols": {
      "IAdminable": [
        60805
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:1800:102",
    "nodes": [
      {
        "id": 60784,
        "nodeType": "PragmaDirective",
        "src": "45:25:102",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 60805,
        "nodeType": "ContractDefinition",
        "src": "323:1521:102",
        "nodes": [
          {
            "id": 60792,
            "nodeType": "EventDefinition",
            "src": "722:72:102",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 60786,
              "nodeType": "StructuredDocumentation",
              "src": "559:158:102",
              "text": "@notice Emitted when the admin is transferred.\n @param oldAdmin The address of the old admin.\n @param newAdmin The address of the new admin."
            },
            "eventSelector": "bdd36143ee09de60bdefca70680e0f71189b2ed7acee364b53917ad433fdaf80",
            "name": "TransferAdmin",
            "nameLocation": "728:13:102",
            "parameters": {
              "id": 60791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60788,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "oldAdmin",
                  "nameLocation": "758:8:102",
                  "nodeType": "VariableDeclaration",
                  "scope": 60792,
                  "src": "742:24:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "742:7:102",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60790,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nameLocation": "784:8:102",
                  "nodeType": "VariableDeclaration",
                  "scope": 60792,
                  "src": "768:24:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "768:7:102",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "741:52:102"
            }
          },
          {
            "id": 60798,
            "nodeType": "FunctionDefinition",
            "src": "1077:49:102",
            "nodes": [],
            "documentation": {
              "id": 60793,
              "nodeType": "StructuredDocumentation",
              "src": "1015:57:102",
              "text": "@notice The address of the admin account or contract."
            },
            "functionSelector": "f851a440",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "admin",
            "nameLocation": "1086:5:102",
            "parameters": {
              "id": 60794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1091:2:102"
            },
            "returnParameters": {
              "id": 60797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60796,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 60798,
                  "src": "1117:7:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:7:102",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1116:9:102"
            },
            "scope": 60805,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60804,
            "nodeType": "FunctionDefinition",
            "src": "1792:50:102",
            "nodes": [],
            "documentation": {
              "id": 60799,
              "nodeType": "StructuredDocumentation",
              "src": "1349:438:102",
              "text": "@notice Transfers the contract admin to a new address.\n @dev Notes:\n - Does not revert if the admin is the same.\n - This function can potentially leave the contract without an admin, thereby removing any\n functionality that is only available to the admin.\n Requirements:\n - `msg.sender` must be the contract admin.\n @param newAdmin The address of the new admin."
            },
            "functionSelector": "75829def",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferAdmin",
            "nameLocation": "1801:13:102",
            "parameters": {
              "id": 60802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60801,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nameLocation": "1823:8:102",
                  "nodeType": "VariableDeclaration",
                  "scope": 60804,
                  "src": "1815:16:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1815:7:102",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1814:18:102"
            },
            "returnParameters": {
              "id": 60803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1841:0:102"
            },
            "scope": 60805,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IAdminable",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 60785,
          "nodeType": "StructuredDocumentation",
          "src": "72:251:102",
          "text": "@title IAdminable\n @notice Contract module that provides a basic access control mechanism, with an admin that can be\n granted exclusive access to specific functions. The inheriting contract must set the initial admin\n in the constructor."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          60805
        ],
        "name": "IAdminable",
        "nameLocation": "333:10:102",
        "scope": 60806,
        "usedErrors": [],
        "usedEvents": [
          60792
        ]
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 102
}